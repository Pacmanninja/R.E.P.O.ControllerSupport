name: Upload Mod to NexusMods

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (without v prefix)'
        required: true
        default: '1.0.0'
      release_url:
        description: 'URL to the release asset (zip file)'
        required: true
      release_notes:
        description: 'Release notes/description'
        required: false
        default: 'New release'

jobs:
  upload-to-nexus:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Get release version (from release event)
        if: github.event_name == 'release'
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set version (from manual input)
        if: github.event_name == 'workflow_dispatch'
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Install Digitalroot.ModUploader
        run: dotnet tool install -g Digitalroot.ModUploader

      - name: Download release asset (from release event)
        if: github.event_name == 'release'
        run: |
          mkdir -p ./dist
          curl -L -o ./dist/ControllerSupport.zip ${{ github.event.release.assets[0].browser_download_url }}

      - name: Download release asset (from manual input)
        if: github.event_name == 'workflow_dispatch'
        run: |
          mkdir -p ./dist
          curl -L -o ./dist/ControllerSupport.zip ${{ github.event.inputs.release_url }}

      - name: Set description (from release event)
        if: github.event_name == 'release'
        run: echo "DESCRIPTION<<EOF" >> $GITHUB_ENV && echo "${{ github.event.release.body }}" >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Set description (from manual input)
        if: github.event_name == 'workflow_dispatch'
        run: echo "DESCRIPTION<<EOF" >> $GITHUB_ENV && echo "${{ github.event.inputs.release_notes }}" >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Upload mod to NexusMods
        env:
          NEXUSMOD_API_KEY: ${{ secrets.NEXUS_API_KEY }}
          NEXUSMOD_SESSION_COOKIE: ${{ secrets.NEXUS_SESSION_COOKIE }}
        run: |
          drmu nx upload 49 ./dist/ControllerSupport.zip -f "ControllerSupport" -v ${{ env.VERSION }} -t "Utilities" -g "repo" -d "${{ env.DESCRIPTION }}"
